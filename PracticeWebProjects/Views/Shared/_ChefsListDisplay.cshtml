@model IEnumerable<ChefsDisplayViewModel>
@{
    Pager pager = (Pager)ViewData["Pager"];
}

<div class="chefs-list-container">
    <form asp-controller="Chef" asp-action="ChefsList" method="get">
        @{
            foreach (var chef in Model)
            {
                <div class="containerPartialChef">
                    <section id="chefNameId">@($"{chef.Id}: {chef.Name}")</section>
                    <br />
                    <span id="chefInfo">@($"Age: {chef.Age}")</span>
                </div>

                <hr />
            }

            <div class="pageBar">
                @if (pager != null && pager.TotalPages > 0)
                {
                    <ul class="pagination justify-content-center">
                        @for (int pge = pager.StartPage; pge <= pager.EndPage; pge++)
                        {
                            <li class="page-item @(pge == pager.CurrentPage ? "active" : "")">
                                <a class="page-link" asp-controller="Chef" asp-action="ChefsList" asp-route-pg="@pge"> @pge></a>
                            </li>
                        }
                    </ul>
                }
            </div>

            <div id="createChefButton">
                <a asp-controller="Chef" asp-action="CreateChef"
                   class="btn btn-danger align-content-center justify-content-center p-3 m-3"
                   style="accent-color:initial; width:200px; height:100px; border:solid; border-color:black;">
                    Create Chef
                </a>
            </div>
        }

    </form>
</div>
    
    